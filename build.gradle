plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.70' apply false
    id "org.springframework.boot" version '2.1.6.RELEASE' apply false
    id "me.champeau.gradle.jmh" version "0.4.8" apply false
    id "io.freefair.aspectj" version "5.0.0-rc6" apply false
    id "io.morethan.jmhreport" version "0.9.0" apply false
}

ext {
    base_version = '0.0.1-SNAPSHOT'

    kotlin_version = '1.3.71'
    kotlin_coroutine_version = '1.3.5'

    activemq_version = '5.15.10'
    artemis_version = '2.10.0'
    aspectj_version = '1.9.5'
    commons_io_version = '2.7'
    commons_lang3_version = '3.7'
    disruptor_version = '3.4.2'
    druid_version = '1.1.20'
    druid_starter_version = '1.1.20'
    gson_version = '2.8.5'
    guava_version = '28.2-jre'
    h2_version = '1.4.200'
    hibernate_version = '5.4.0.Final'
    hikaricp_version = '3.4.2'
    jaxb_api_version = '2.3.1'
    jaxb_glassfish_version = '2.3.1'
    jetbrains_annotations_version = '19.0.0'
    jmh_version = '1.23'
    jms_version = '2.0.1'
    junit_platform_version = '1.6.2'
    junit_jupiter_version = "5.6.2"
    kafka_client_version = '2.3.0'
    log4j_slf4j_version = '2.11.2'
    lombok_version = '1.18.4'
    mockito_kotlin_version = '1.6.0'
    mockito_version = '2.23.4'
    mybatis_spring_version = "2.0.2"
    mybatis_starter_version = '2.1.0'
    mybatis_version = '3.5.4'
    mysql_connector_version = '8.0.19'
    netty_version = '4.1.50.Final'
    okhttp_version = '4.0.1'
    protobuf_version = '3.11.4'
    slf4j_version = '1.7.25'
    snakeyaml_version = '1.26'
    spring_version = '5.1.9.RELEASE'
    spring_boot_version = '2.1.8.RELEASE'
    spring_kafka_version = '2.2.7.RELEASE'
}


configure(allprojects) { project ->
    group = 'com.ivyxjc'
    version base_version

    apply plugin: 'java'
    apply plugin: 'maven-publish'
    if (name != 'libra-aspect') {
        apply plugin: 'org.jetbrains.kotlin.jvm'
    }

    sourceCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenLocal()
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap/' }
        mavenCentral()
    }

    buildDir = "${rootProject.projectDir.path}/build/${rootProject.name}/${project.name}"

    sourceSets.main.resources.srcDirs += "${rootProject.projectDir.path}/src/main/resources"
    sourceSets.test.resources.srcDirs += "${rootProject.projectDir.path}/src/test/resources"

    task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        archiveClassifier = 'sources'
    }

    task fatJar(type: Jar) {
        baseName = project.name
        print(configurations)
        from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
        with jar
    }

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
        options.encoding = "UTF-8"
    }

    compileTestJava {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
        options.encoding = "UTF-8"
        options.compilerArgs += "-parameters"
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xallow-result-return-type", "-Xjsr305=strict"]
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xallow-result-return-type", "-Xjsr305=strict"]
        }
    }

    test {
        useJUnitPlatform()
    }

    configurations {
        all*.exclude group: 'ch.qos.logback', module: 'logback-core'
        all*.exclude group: 'ch.qos.logback', module: 'logback-classic'
        all*.exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        all*.exclude group: 'junit', module: 'junit'
    }

    dependencies {
        testImplementation group: 'org.junit.platform', name: 'junit-platform-launcher', version: junit_platform_version
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junit_jupiter_version

        testImplementation(group: 'org.mockito', name: 'mockito-core', version: mockito_version) {
            exclude group: "org.hamcrest", module: "hamcrest-core"
        }
        testImplementation(group: 'com.nhaarman', name: 'mockito-kotlin', version: mockito_kotlin_version) {
            exclude module: "kotlin-stdlib"
            exclude module: "kotlin-reflect"
            exclude module: "mockito-core"
        }

        //kotlin
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
        implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
        //apache
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: commons_lang3_version
        implementation group: 'commons-io', name: 'commons-io', version: commons_io_version
        //log
        implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4j_version
        runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j_slf4j_version

        //guava
        implementation group: 'com.google.guava', name: 'guava', version: guava_version

        compileOnly group: 'org.jetbrains', name: 'annotations', version: jetbrains_annotations_version
        testCompileOnly group: 'org.jetbrains', name: 'annotations', version: jetbrains_annotations_version
    }
}

project("ivy-camp") {
    dependencies {
        implementation project(":demo-common")
        implementation group: 'xalan', name: 'xalan', version: '2.7.2'
    }
}

project("netty-rpc") {
    dependencies {
        implementation project(":demo-common")
        implementation group: 'io.netty', name: 'netty-all', version: netty_version
    }
}

project("netty-demo") {
    dependencies {
        implementation project(":demo-common")
        implementation group: 'io.netty', name: 'netty-all', version: netty_version
    }
}
